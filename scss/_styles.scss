// http://www.stubbornella.org/content/2013/07/01/easy-peasy-rem-conversion-with-sass/
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

$colors: (
    yelow: #FFE600,
    grey-darken-4: #333333,
    grey-darken-3: #666666,
    grey-ligthen-2:#999999,
    grey-ligthen-4:#EEEEEE,
    blue-darken-1: #3483FA,
);

// Break points size
$breakpoints: (
  xs: calculateRem(512px),
  sm: calculateRem(768px),
  md: calculateRem(1152px),
  lg: calculateRem(1536px),
  xl: calculateRem(1632px),
  xx: calculateRem(1920px)
);


html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  font-size: calculateRem(16px);
  font-family: "Helvetica Neue", Arial, sans-serif;
  line-height: 1.5;
  background-color: map-get($colors, grey-ligthen-4);
  margin: 0;
}

/////////////////////////////
/// BASIC FLUID GRID SYSTEM//
/////////////////////////////

// media query mixin
@mixin break($size) {
  @if ($size == 0) {
    @content;
  } @else {
    @media (min-width: map-get($breakpoints, $size)) {
      @content;
    }
  }
}

// number of columns
$grid-columns: 12;

// grid container
.container {
  margin: 0 auto;
  max-width: map-get($breakpoints, md);
}

.container-fluid {
  width: 100%;
  margin: 0;
}

// row item
.row {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

// loop over the breakpoints
@each $key, $size in $breakpoints {
  @include break($key) {
    @for $i from 1 through $grid-columns {
      .col-Â·#{$key}-#{$i} {
        flex-basis: (100/ ($grid-columns/$i)) * 1%;
      }
    }
  }
}

